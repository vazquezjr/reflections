1) What happens when you initialize a repository? Why do you need to do it?

A .git folder is created in the current directory which stores the metadata for the
	git repository.

2) How is the staging area different from the working directory and the repository?
		What value do you think it offers?

The staging area shows what files are going to be a part of the next commit and is
	used for that very purpose. The working directory is the current directory that
	you are in and the repository is where the files are committed after they
	have been added to the staging area.

3) How can you use the staging area to make sure you have one commit per logical
change?

I can use git diff to see if I made any changes since my last commit, then I can
	use git diff --staged to check for any differences between my latest commit and
	the staging area. This allows me to see if my changes since the latest commit
	constitute a logical change.

4) What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

Branches will be helpful when you add experimental features or features that are not
	guaranteed to work, for example. In general, when you want to take risks in writing code
	without any consequences.

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
